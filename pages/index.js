import axios from 'axios'
import Head from 'next/head'
import { useEffect, useState } from 'react';
import ListItem from '../components/ListItem';
export default function Home() {
  const FILE_UPLOAD_ENDPOINT = 'https://pdfupload332.herokuapp.com/api/v1/upload';
  const FILE_LIST_ENDPOINT = 'https://pdfupload332.herokuapp.com/api/v1/files';
  const MAX_FILE_SIZE = 1024*1024;
  const [file,setFile] = useState('');
  const [name,setName] = useState('');
  const [filelist,setFilelist] = useState([])
const upload = () =>{
  if(file==''){
    alert("File should be selected!!");
    return;
  }
  if(name==''){
    alert("Name is required");
    return;
  }
  const formData = new FormData();
  formData.append("file",file);
  formData.append("name",name);
  axios.post(FILE_UPLOAD_ENDPOINT,formData,{
    headers:{accept:"application/json",
    "Content-Type": "multipart/form-data",
    "Access-Control-Allow-Origin": "*",}
}).then(resp=>{
    console.log(filelist);
    const f = filelist;
    f.push({
      id:resp.data.id,
      name:resp.data.name,
      url:resp.data.url
    })
    alert('Uploaded!');
    console.log(f);
    setFilelist(f);
  }).catch(err=>{
    console.error(err);
  })
}

useEffect(()=>{
  console.log("Loading FileList...");
  axios.get(FILE_LIST_ENDPOINT).then(resp=>{

    setFilelist(resp.data)
  }).catch(err=>{
    console.log(err);
  })
},[]);

const handleFileSelect = (e)=>{
  if(e.target.files[0].size>MAX_FILE_SIZE){
    alert("File Size should be <= 1MB");
    setFile('');
    return;
  }
  setFile(e.target.files[0]);
}

  return (
    <div>
      <Head>
        <title>Netcracker Backend</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h2>Upload PDF</h2>
        <input type="text" placeholder="Enter File Name" id="name" onKeyUp={()=>setName(event.target.value)}/>
        <input type="file" id="file" onChange={handleFileSelect}/>
        <button onClick={upload} >Upload File</button>

        <h2>Uploaded PDFs</h2>
        {filelist.length==0?(
          <h4>No Files Uploaded Yet..</h4>
        ):(
          filelist.map(f=>(
            <ListItem key={f.id} name={f.name} url={f.url}/>
          ))
        )}
        
      </main>

     
    </div>
  )
}
